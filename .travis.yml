language: cpp
dist: trusty
python: 3.6

addons:
  apt:
    packages:
      - "python3-pip"

install:
  - pip3 install --user -r drake/requirements.txt

before_script:
  - |

       declare -r SSH_FILE="$(mktemp -u $HOME/.ssh/XXXXXX)"

       # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

       # Decrypt the file containing the private key
       # (Note: this is the same as what is generated by the Travis CLI at step 2.5)

       openssl aes-256-cbc \
         -K ${!encrypted_key} \
         -iv ${!encrypted_iv} \
         -in ".travis/GitHub.enc" \
         -out "$SSH_FILE" -d

       # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

       # Enable SSH authentication

       chmod 600 "$SSH_FILE" \
         && printf "%s\n" \
              "Host github.com" \
              "  IdentityFile $SSH_FILE" \
              "  LogLevel ERROR" >> ~/.ssh/config
  - git remote add GitHub git@github.com:$TRAVIS_REPO_SLUG.git
  - mkdir -p .meta/{status,duration,coverage}

script:
  - cd "$TRAVIS_BUILD_DIR"/_build/linux64 && ./drake //build -j 2
  - cd "$TRAVIS_BUILD_DIR"/_build/linux64 && ./drake //check -j 2

after_script:
  # Store new .meta so it's not overwritten.
  - mv .meta .meta.new
  # Go to the last meta branch.
  # FIXME: This doesn't work with parallel builds.
  - git fetch GitHub
  - git remote
  - git remote show GitHub
  - git branch -D meta GitHub/meta
  - git checkout GitHub/meta
  # Replace old .meta by the new one.
  - rm -rf .meta
  - mv .meta.new .meta
  # Add it.
  - git add -f .meta
  # Commit using the sha1 of the commit as message.
  - git commit -m "$TRAVIS_COMMIT" --allow-empty
  # Push.
  - git push --force GitHub HEAD:refs/heads/meta

# blocklist
branches:
  except:
  - meta
